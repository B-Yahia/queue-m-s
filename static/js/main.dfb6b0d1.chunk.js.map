{"version":3,"sources":["Components/HomePage/HomePage.js","Components/StateProvider/StateProvider.js","Components/WelcomePage/WelcomePage.js","Components/WaitingListPage/WaitingListPage.js","Components/ServerPage/ServerPage.js","Components/AdminPage/AdminPage.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["HomePage","className","to","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","WelcomePage","waitingList","customer","dispatch","useState","customerName","setCustomerName","console","log","onSubmit","event","preventDefault","newCustomer","id","Date","now","name","arrivingDate","arrivingTime","updateWaitingList","type","window","alert","placeholder","onChange","target","WaitingListPage","serviceList","waitingCustomerList","map","item","index","Grid","container","spacing","xs","length","ServerPage","servedList","servedBy","setServedBy","serviceCustomerList","numeral","waitingDuration","format","htmlFor","onClick","serviceStartedTime","filter","diffInSec","Math","round","updateCustomer","updateServiceList","serviceFinishedTime","serviceDuration","updateServedList","AdminPage","totalWaitingDuration","reduce","total","next","totalServiceDuration","avrgWaitingDuration","avrgServiceDuration","servedCustomers","numberOfCustomersServed","averageWaitingDuration","averageServiceDuration","totalWaitingTime","totalServiceTime","columns","label","minWidth","align","toLocaleString","rows","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","style","TableBody","row","hover","role","tabIndex","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","ReactDOM","render","StrictMode","leavingTime","document","getElementById"],"mappings":"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","file":"static/js/main.dfb6b0d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HomePage.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"homePage__container\">\r\n      <h1>Queue management system</h1>\r\n      <div className=\"homePage\">\r\n        <Link className=\"home__button\" to=\"/welcome\">\r\n          Welcome\r\n        </Link>\r\n        <Link className=\"home__button\" to=\"/waiting-list\">\r\n          Waiting List\r\n        </Link>\r\n        <Link className=\"home__button\" to=\"/server\">\r\n          Server{\" \"}\r\n        </Link>\r\n        <Link className=\"home__button\" to=\"/admin\">\r\n          Admin{\" \"}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { createContext, useContext, useReducer } from \"react\";\r\n\r\n//THIS IS A DATA LAYER\r\nexport const StateContext = createContext();\r\n\r\n//BUILD A PROVIDER\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n// THIS IS HOW WE USE IT INSIDE COMPONENT\r\n\r\nexport const useStateValue = () => {\r\n  return useContext(StateContext);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useStateValue } from \"../StateProvider/StateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./WelcomePage.css\";\r\n\r\nconst WelcomePage = () => {\r\n  const [{ waitingList, customer }, dispatch] = useStateValue();\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n\r\n  console.log(\"waitList\", waitingList);\r\n\r\n  const addToQueue = (event) => {\r\n    event.preventDefault();\r\n    const newCustomer = {\r\n      ...customer,\r\n      id: Date.now(),\r\n      name: customerName,\r\n      arrivingDate: new Date(Date.now()),\r\n      arrivingTime: Date.now(),\r\n    };\r\n    if (newCustomer.name !== \"\") {\r\n      const updateWaitingList = [...waitingList, newCustomer];\r\n      console.log(updateWaitingList);\r\n      dispatch({\r\n        type: \"ADD_COSTUMER\",\r\n        waitingList: updateWaitingList,\r\n      });\r\n      setCustomerName(\"\");\r\n    } else {\r\n      window.alert(\"The input field is empty.Please write your name\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"welcomePage__container\">\r\n      <h1>Welcome in \"The company name\"</h1>\r\n      <div className=\"welcomePage\">\r\n        <Link to=\"/\" className=\"back__home\">\r\n          Back to home\r\n        </Link>\r\n\r\n        <form className=\"welcomePage__form\" onSubmit={addToQueue}>\r\n          <input\r\n            placeholder=\"Type your name\"\r\n            className=\"form__input\"\r\n            value={customerName}\r\n            onChange={(event) => setCustomerName(event.target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"form__button\">\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n","import React from \"react\";\r\nimport \"./WaitingListPage.css\";\r\nimport { useStateValue } from \"../StateProvider/StateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst WaitingListPage = () => {\r\n  const [{ waitingList , serviceList }, dispatch] = useStateValue();\r\n  const waitingCustomerList = waitingList.map((item, index) => (\r\n    <h4>\r\n      {index + 1} - {item.name}\r\n    </h4>\r\n  ));\r\n  console.log(waitingCustomerList);\r\n\r\n  return (\r\n    <div className=\"waitingPage__container\">\r\n      <h1>Waiting List</h1>\r\n      <div className=\"waitingPage\">\r\n        <Link to=\"/\" className=\"back__home\">\r\n          Back to home\r\n        </Link>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <div className=\"waitingList\">\r\n              {waitingList.length !== 0 ? (\r\n                waitingList.map((item, index) => (\r\n                  <h3 key={item.id} className=\"waitingList__item\">\r\n                    {index + 1} - {item.name}\r\n                  </h3>\r\n                ))\r\n              ) : (\r\n                <h2 className=\"empty__list\">Waiting List is empty</h2>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div className=\"cins\">\r\n              <h3>Please go to Counter</h3>\r\n                <h2 className=\"empty__list\">{serviceList.length !==0 ?(\r\n                  serviceList.map((item) => (\r\n                    \r\n                    <h1 className=\"cins1\" key={item.id}>{item.name}</h1>\r\n                  ))\r\n                ) : (\r\n                  <h2>Please get ready</h2>\r\n                )}</h2>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaitingListPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./ServerPage.css\";\r\nimport { useStateValue } from \"../StateProvider/StateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport numeral from \"numeral\";\r\n\r\nconst ServerPage = () => {\r\n  const [{ waitingList, serviceList, servedList }, dispatch] = useStateValue();\r\n  const [servedBy, setServedBy] = useState(\"\");\r\n  console.log(\"servedBy\", servedBy);\r\n\r\n  const moveToService = () => {\r\n    if (waitingList.length !== 0) {\r\n      if (serviceList.length === 0) {\r\n        const customer = waitingList[0];\r\n        const serviceStartedTime = Date.now();\r\n        const updateWaitingList = waitingList.filter(\r\n          (item) => item.id !== customer.id\r\n        );\r\n        const diffInSec = Math.round(\r\n          (serviceStartedTime - customer.arrivingTime) / 1000\r\n        );\r\n        const updateCustomer = {\r\n          ...customer,\r\n          waitingDuration: diffInSec,\r\n          serviceStartedTime: serviceStartedTime,\r\n        };\r\n        console.log(numeral(diffInSec).format(\"00:00:00\"));\r\n        const updateServiceList = [...serviceList, updateCustomer];\r\n        dispatch({\r\n          type: \"MOVE_TO_SERVICE\",\r\n          waitingList: updateWaitingList,\r\n          serviceList: updateServiceList,\r\n        });\r\n        // // servedCustomersDetails();\r\n      } else {\r\n        window.alert(\r\n          \"Please close the open ticket and then call another customer from the queue\"\r\n        );\r\n      }\r\n    } else {\r\n      window.alert(\"Waiting list empty\");\r\n    }\r\n  };\r\n\r\n  const serviceFinished = () => {\r\n    if (serviceList.length !== 0) {\r\n      const customer = serviceList[0];\r\n      const updateServiceList = serviceList.filter(\r\n        (item) => item.id !== customer.id\r\n      );\r\n      const serviceFinishedTime = Date.now();\r\n      const diffInSec = Math.round(\r\n        (serviceFinishedTime - customer.serviceStartedTime) / 1000\r\n      );\r\n      const serviceDuration = diffInSec;\r\n      const updateCustomer = {\r\n        ...customer,\r\n        serviceFinishedTime: serviceFinishedTime,\r\n        serviceDuration: serviceDuration,\r\n        servedBy: servedBy,\r\n      };\r\n\r\n      const updateServedList = [...servedList, updateCustomer];\r\n      console.log(\"updateServedList\", updateServedList);\r\n      console.log(\"updateServiceList\", updateServiceList);\r\n      dispatch({\r\n        type: \"REMOVE_FROM_SERVICE\",\r\n        servedList: updateServedList,\r\n        serviceList: updateServiceList,\r\n      });\r\n    } else {\r\n      window.alert(\"Service List is empty\");\r\n    }\r\n  };\r\n\r\n  const serviceCustomerList = serviceList.map((item) => (\r\n    <div key={item.id} className=\"serviceList\">\r\n      <h4>{item.name}</h4>\r\n      <span>\r\n        Waiting Time : {numeral(item.waitingDuration).format(\"00:00:00\")}\r\n      </span>\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"serverPage__container\">\r\n      <h1>Server</h1>\r\n      <div className=\"serverPage\">\r\n        <Link to=\"/\" className=\"back__home\">\r\n          back to home\r\n        </Link>\r\n        <div className=\"server\">\r\n          <label htmlFor=\"served_by\" className=\"server__servedBy\">\r\n            Served By\r\n            <input\r\n              type=\"text\"\r\n              value={servedBy}\r\n              onChange={(event) => setServedBy(event.target.value)}\r\n            />\r\n          </label>\r\n          <div className=\"server__serviceClient\">\r\n            <button onClick={moveToService}>Next</button>\r\n            {serviceCustomerList}\r\n            <button onClick={serviceFinished}>CloseTheTicket</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ServerPage;\r\n","import React from \"react\";\r\nimport \"./AdminPage.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider/StateProvider\";\r\nimport numeral from \"numeral\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst AdminPage = () => {\r\n  const [{ servedList ,waitingList }, dispatch] = useStateValue();\r\n  const totalWaitingDuration = servedList\r\n    ?.map((item) => item.waitingDuration)\r\n    ?.reduce((total, next) => total + next, 0);\r\n\r\n  console.log(servedList?.map((item) => item.waitingDuration));\r\n  const totalServiceDuration = servedList\r\n    ?.map((item) => item.serviceDuration)\r\n    ?.reduce((total, next) => total + next, 0);\r\n\r\n  const avrgWaitingDuration = Math.round(\r\n    totalWaitingDuration / servedList.length\r\n  );\r\n  const avrgServiceDuration = Math.round(\r\n    totalServiceDuration / servedList.length\r\n  );\r\n\r\n  const servedCustomers = {\r\n    numberOfCustomersServed: servedList.length,\r\n    averageWaitingDuration: avrgWaitingDuration,\r\n    averageServiceDuration: avrgServiceDuration,\r\n    totalWaitingTime: totalWaitingDuration,\r\n    totalServiceTime: totalServiceDuration,\r\n  };\r\n  console.log(\"servedCustomers\", servedCustomers);\r\n  // dispatch({\r\n  //   type: \"SERVED_COSTUMERS_DETAILS\",\r\n  //   servedCustomers: servedCustomers,\r\n  // });\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"Name\", minWidth: 170 },\r\n    {\r\n      id: \"arrivingDate\",\r\n      label: \"Date\",\r\n      minWidth: 70,\r\n      align: \"right\",\r\n      format: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      id: \"waitingDuration\",\r\n      label: \"Waiting Duration\",\r\n      minWidth: 70,\r\n      align: \"right\",\r\n      format: (value) => numeral(value).format(\"00:00:00\"),\r\n    },\r\n    {\r\n      id: \"serviceDuration\",\r\n      label: \"Service Duration\",\r\n      minWidth: 70,\r\n      align: \"right\",\r\n      format: (value) => numeral(value).format(\"00:00:00\"),\r\n    },\r\n    {\r\n      id: \"servedBy\",\r\n      label: \"Server Name\",\r\n      minWidth: 70,\r\n      align: \"right\",\r\n    },\r\n  ];\r\n\r\n  const rows = [...servedList];\r\n\r\n  return (\r\n    <div className=\"adminPage__container\">\r\n      <h1>Admin</h1>\r\n      <div className=\"adminPage\">\r\n        <Link to=\"/\" className=\"back__home\">\r\n          Back to home\r\n        </Link>\r\n        <div className=\"admin\">\r\n          <div className=\"admin__info\">\r\n            <p className=\"detail-info\">\r\n              <span className=\"detail-info-text\">The nuber of customers in the queue :</span>\r\n              <span className=\"detail-info-value\" >\r\n              {waitingList.length}\r\n              </span>\r\n            </p>\r\n            <p className=\"detail-info\" >\r\n              <span className=\"detail-info-text\" >The Totale served cutomers for the shift is :</span>\r\n              <span className=\"detail-info-value\" >{servedCustomers.numberOfCustomersServed}</span>\r\n  \r\n            </p>\r\n            <p className=\"detail-info\">\r\n              <span className=\"detail-info-text\">The average waiting time for customers :</span>\r\n              <span className=\"detail-info-value\" >\r\n              {numeral(servedCustomers.averageWaitingDuration).format(\"00:00:00\")}\r\n              </span>\r\n              \r\n            </p>\r\n            <p className=\"detail-info\">\r\n              <span className=\"detail-info-text\">The average service time for customers :</span>\r\n              <span className=\"detail-info-value\" >\r\n              {numeral(servedCustomers.averageServiceDuration).format(\r\n                \"00:00:00\"\r\n              )}\r\n              </span>\r\n              \r\n            </p>\r\n            <p className=\"detail-info\">\r\n              <span className=\"detail-info-text\">The total waiting time for customers :</span>\r\n              <span className=\"detail-info-value\" >\r\n              {numeral(servedCustomers.totalWaitingTime).format(\"00:00:00\")}\r\n              </span>\r\n              \r\n            </p>\r\n            <p className=\"detail-info\">\r\n              <span className=\"detail-info-text\">The total service time for customers :</span>\r\n              <span className=\"detail-info-value\" >\r\n              {numeral(servedCustomers.totalServiceTime).format(\"00:00:00\")}\r\n              </span>\r\n              \r\n            </p>\r\n          </div>\r\n        </div>\r\n        <TableContainer className=\"tableContainer\">\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows?.map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format ? column.format(value) : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./Components/HomePage/HomePage\";\nimport WelcomePage from \"./Components/WelcomePage/WelcomePage\";\nimport WaitingListPage from \"./Components/WaitingListPage/WaitingListPage\";\nimport ServerPage from \"./Components/ServerPage/ServerPage\";\nimport AdminPage from \"./Components/AdminPage/AdminPage\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/welcome\" component={WelcomePage} />\n        <Route path=\"/waiting-list\" component={WaitingListPage} />\n        <Route path=\"/server\" component={ServerPage} />\n        <Route path=\"/admin\" component={AdminPage} />\n        <Route exact path=\"/\" component={HomePage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n// // import {BrowserRouter as Router, Switch,Route} from \"react-router-dom\"\n// import \"./App.css\";\n// import WelcomePage from \"./Components/WelcomePage\";\n// // import SideBar from './Componants/SideBar';\n// // import WaitingListPage from \"./Componants/WaitingListPage\";\n// // import ServerPage from \"./Componants/ServerPage\";\n// // import AdminPage from \"./Componants/AdminPage\";\n\n// function App() {\n//   return (\n//     // <Router>\n//     //   <SideBar />\n//     //   <Switch>\n//     //   <Route path='/' exact component={WelcomePage}/>\n//     //   <Route path='/waiting' component={WaitingListPage}/>\n//     //   <Route path='/server' component={ServerPage}/>\n//     //   <Route path='/admine' component={AdminPage}/>\n\n//     //   </Switch>\n//     // </Router>\n\n//     <div className=\"App\">\n//       <h1>Q management system</h1>\n\n//       <WelcomePage />\n//     </div>\n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n    waitingList: [],\r\n    serviceList: [],\r\n    servedList: [],\r\n    customer: {\r\n      id: \"\",\r\n      name: \"\",\r\n      arrivingDate: \"\",\r\n      arrivingTime: 0,\r\n      serviceStartedTime: 0,\r\n      serviceFinishedTime: 0,\r\n      leavingTime: 0,\r\n      waitingDuration: 0,\r\n      serviceDuration: 0,\r\n      servedBy: \"\",\r\n    },\r\n    servedCustomers: {\r\n      numberOfCustomersServed: 0,\r\n      averageWaitingDuration: 0,\r\n      averageServiceDuration: 0,\r\n      totalWaitingTime: 0,\r\n      totalServiceTime: 0,\r\n    },\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case \"ADD_COSTUMER\":\r\n        return {\r\n          ...state,\r\n          waitingList: action.waitingList,\r\n        };\r\n        break;\r\n      case \"MOVE_TO_SERVICE\":\r\n        return {\r\n          ...state,\r\n          waitingList: action.waitingList,\r\n          serviceList: action.serviceList,\r\n        };\r\n        break;\r\n      case \"REMOVE_FROM_SERVICE\":\r\n        return {\r\n          ...state,\r\n          serviceList: action.serviceList,\r\n          servedList: action.servedList,\r\n        };\r\n      case \"SERVED_COSTUMERS_DETAILS\":\r\n        return {\r\n          ...state,\r\n          servedCustomers: action.servedCustomers,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;\r\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { StateProvider } from \"./Components/StateProvider/StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <StateProvider initialState={initialState} reducer={reducer}>\n        <App />\n      </StateProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}